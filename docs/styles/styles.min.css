/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */progress,sub,sup{vertical-align:baseline}button,hr,input{overflow:visible}*,legend{box-sizing:border-box}html{font:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.photos__list:after{content:"";display:block;clear:both}.nav__control,.pager,.pager__item,.pager__item--active{display:inline-block;vertical-align:middle}.heading{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline;padding:21px 2px 5px;font-size:26px;font-weight:400;font-family:"Playfair Display",serif;color:#000;text-transform:uppercase;text-align:left}.banner__description,.nav{font-family:"Noto Sans",sans-serif}.heading:after{display:inline-block;margin-left:15px;height:1px;content:'';width:35%;-ms-flex-positive:1;flex-grow:1;border-bottom:2px solid #000}@media (min-width:30em){.heading{padding:21px 4px 10px;font-size:40px}}@media (min-width:48em){.heading{padding:21px 10px 0}}.banner{display:-ms-flexbox;display:flex;width:100%;padding:10px 3px 4px}@media (min-width:30em){.banner{display:none}}.banner__img-wrap{min-width:100px}.banner__description{padding:4.5px 0 0 19px;background:#fbf6e8;text-align:left;color:#000}.banner__hint-text{font-size:10px;color:#bebebe;font-weight:700}.banner__heading{padding:1px 0 0;font-size:13px;font-weight:900;letter-spacing:.5px}.banner__subheading{padding:1px 0 0;font-size:12px;font-weight:400}.img-wrap,.img-wrap--round,.photos__item,.photos__item--adv,.photos__item--sticker{overflow:hidden}.img-wrap--round{border-radius:50%}.img,.photos__img,.photos__img--adv,.photos__img--big{display:block;width:100%}.nav{padding:19px 6px;font-size:13px;color:#000}@media (min-width:30em){.nav{padding:29px 5px}}@media (min-width:48em){.nav{padding:30px 10px}}.nav__text{display:none}body,h1,h2,h3,h4,html,p,ul{margin:0;padding:0}html{font-size:14px;line-height:1.42}@media (min-width:48em){html{font-size:15px}}@media (min-width:64em){html{font-size:16px}}ul{list-style:none}.container{-ms-flex-direction:column;flex-direction:column;min-width:320px;max-width:768px;margin:0 auto;padding:0 2px}@media (min-width:30em){.nav__text{display:inline-block;vertical-align:middle}.container{padding:0 15px}}@media (min-width:48em){.container{padding:0 24px}}.photos{display:block}.photos__item,.photos__item--adv,.photos__item--sticker{float:left;width:25%;height:48px;margin:6px 0 0;padding:0 3px;text-align:center;font-family:"Noto Serif",serif}.photos__author,.photos__description{font-size:13px;font-family:"Noto Sans",sans-serif}@media (min-width:30em){.photos__item,.photos__item--adv,.photos__item--sticker{width:20%;margin:10px 0 0;padding:0 5px;height:53px}}@media (min-width:48em){.photos__item,.photos__item--adv,.photos__item--sticker{width:25%;height:104px;margin:20px 0 0;padding:0 10px}}.photos__item--sticker{position:absolute;left:9px;top:6px;min-height:53px;margin:0;padding:0}@media (min-width:30em){.photos__item--sticker{left:10px;top:10px;padding:inherit}}.photos__item--adv{display:none;text-align:right}@media (min-width:30em){.photos__item--adv{display:block;width:40%;height:242px}}.photos__first{position:relative;margin:6px 0 0;padding:0 3px}@media (min-width:30em){.photos__first{margin:10px 0 0;padding:0 5px}}@media (min-width:48em){.photos__item--sticker{left:20px;top:20px}.photos__item--adv{width:25%;height:228px}.photos__first{margin:20px 0 0;padding:0 10px}}.photos__description{display:none;margin:13px 0 0;color:#000;font-weight:700;letter-spacing:.56px}@media (min-width:48em){.photos__description{display:block}}.photos__author{display:none;color:#acacac}.photos__date{height:100%;padding:6px 3px 0;text-align:center;font-family:"Noto Serif",serif;color:#000;opacity:.8;background:#fff}@media (min-width:30em){.photos__date{padding:8px 3px 0}.photos__day{position:relative}.photos__day:after{position:absolute;top:50%;right:15px;content:'';width:0;height:0;border:3px solid transparent;border-left:3px solid #000}}.photos__day{font-size:18px;line-height:1}@media (min-width:48em){.photos__author{display:block}.photos__date{padding:20px 3px 0}.photos__day{font-size:36px}}.photos__month{font-size:14px}.photos__img--big{height:202px}@media (min-width:48em){.photos__month{font-size:18px}.photos__img--big{min-height:455px}}.photos__img--adv{display:inline-block;width:auto}.pager{padding:0 25px 0 0}@media (min-width:30em){.photos__img--big{height:286px}.pager{padding:0 20px}.pager__item,.pager__item--active{margin:0 5px}}.pager__item,.pager__item--active{width:34px;height:34px;padding:8px 0 0;text-align:center}.pager__item--active{font-weight:700;border-radius:50%;background:#e6e6e6}.pager__link{color:#000;text-decoration:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
